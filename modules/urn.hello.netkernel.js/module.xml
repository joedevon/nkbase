<?xml version="1.0" encoding="UTF-8"?>
<module version="2.0">
	<meta>
		<identity>
			<uri>urn:hello:netkernel:js</uri>
			<version>0.1.0</version>
		</identity>
		<info>
			<name>Demo / NetKernel.js</name>
			<description>demo of server-side javascript w/ XRL on NetKernel</description>
		</info>
	</meta>

	<system>
		<!-- allow the module to redeploy if changes are detected -->
		<dynamic/>
	</system>

	<rootspace>
		<!-- create the HTTP transport -->
		<endpoint>
			<prototype>HTTPTransport</prototype>
			<config>res:/etc/HTTPServerConfig.xml</config>
		</endpoint>

		<!-- map the HTTP transport configuration resource to the filesystem -->
		<fileset>
			<glob>etc/HTTPServerConfig.xml</glob>
		</fileset>
		<!-- pass HTTP requests through the bridge to map http requests into ROC address-space -->
		<overlay>
			<prototype>HTTPBridge</prototype>
			<space>
				<overlay>
					<prototype>VirtualHost</prototype>
					<config>
						<host>
    						<grammar>http://netkernel-js.com<optional>:<regex type="integer"/></optional>
								<group name="path"><regex>.*</regex></group>
							</grammar>
							<request>
								<identifier>res:[[arg:path]]</identifier>
									<representation>org.netkernel.layer0.representation.IBinaryStreamRepresentation</representation>
							</request>
							<import-type>vhost</import-type>
						</host>
					</config>
				</overlay>
			</space>
		</overlay>

		<!-- import HTTP module so that transport prototype is available -->
		<import>
			<uri>urn:org:netkernel:tpt:http</uri>
		</import>
		<import>
			<uri>urn:com:ten60:netkernel:mod:architecture</uri>
		</import>
		<import>
		  <uri>urn:org:netkernel:ext:layer1</uri>
		</import>
		<import>
			<uri>urn:org:netkernel:xml:core</uri>
		</import>
	</rootspace>

	<rootspace>
		<fileset>
			<regex>res:/etc/system/SimpleDynamicImportHook.xml</regex>
			<rewrite>res:/vhost/SimpleDynamicImportHook.xml</rewrite>
		</fileset>
		<pluggable-overlay>
			<postProcess>
				<identifier>active:javascript</identifier>
				<argument name="operator">res:/resources/template/TemplateWrapper.js</argument>
				<argument name="response">arg:response</argument>
			</postProcess>
			<space>
				<mapper>
					<config>
						<endpoint>
							<grammar>res:/</grammar>
							<request>
										<identifier>res:/resources/template/home/index.xml</identifier>
							</request>
						</endpoint>
						<endpoint>
							<grammar>res:/blog<regex>/?</regex></grammar>
							<request>
										<identifier>res:/resources/template/blog/index.xml</identifier>
							</request>
						</endpoint>
						<!-- map images to physical resource -->
						<endpoint>
							<grammar>res:/img/<group name="path"><regex>.*\.(png|ico|gif)</regex></group></grammar>
							<request>
								<identifier>res:/resources/pub/assets/[[arg:path]]</identifier>
							</request>
						</endpoint>
						<!-- map css/js to physical resource -->
						<endpoint>
							<grammar>res:/<regex>(js|css)/</regex><group name="path"><regex>.*\.(css|js)</regex></group></grammar>
							<request>
								<identifier>res:/resources/assets/[[arg:path]]</identifier>
							</request>
						</endpoint>
					</config>
					<space>
						<fileset>
							<regex>res:/resources/.*</regex>
						</fileset>
					</space>
				</mapper>
				<fileset>
					<regex>res:/resources/.*</regex>
				</fileset>
				<import>
					<uri>urn:org:netkernel:lang:javascript</uri>
					<private/>
				</import>
				<import>
					<uri>urn:org:netkernel:lang:xrl</uri>
					<private/>
				</import>
			</space>
		</pluggable-overlay>
	</rootspace>
</module>